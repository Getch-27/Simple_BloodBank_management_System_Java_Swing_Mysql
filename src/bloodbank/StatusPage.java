/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package bloodbank;

import com.mysql.cj.protocol.Resultset;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.ResultSetMetaData;
import java.sql.SQLException;
import java.sql.Statement;
import java.util.Vector;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Getch
 */
public class StatusPage extends javax.swing.JFrame {

    /**
     * Creates new form SearchBloodPage
     */
    public StatusPage() {
        initComponents();
       String  mysql="select  *from bloodtable"; 
       String quanql="SELECT sum(packets) FROM bloodtable";
          try {
            Class.forName("com.mysql.cj.jdbc.Driver");
            Connection cn=DriverManager.getConnection("jdbc:mysql://localhost/bloodbank","root","root");
            DefaultTableModel table =(DefaultTableModel)BloodStatusTable.getModel();
            PreparedStatement smt=cn.prepareStatement(mysql);
            PreparedStatement smt2=cn.prepareStatement(quanql);
            ResultSet rs=smt.executeQuery();
            ResultSet rs2=smt2.executeQuery();
            if(rs2.next()){
            
            double sum= rs2.getDouble(1);
            StatusLable.setText(" "+sum+"  total blood Packets ");
            }
           
       while(rs.next()){
    
                    String a1=rs.getString(1);
                    String a2=rs.getString(2);
                    String a3=rs.getString(3);
                   

Object pc[]={a1,a2,a3};
table.addRow(pc);

}  
        } catch (ClassNotFoundException | SQLException ex) {
            Logger.getLogger(SearchDoner.class.getName()).log(Level.SEVERE, null, ex);
        }

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        BloodStatusTable = new javax.swing.JTable();
        HomeBtn = new javax.swing.JButton();
        DonorsBtn = new javax.swing.JButton();
        BuyersBtn = new javax.swing.JButton();
        BloodBtn = new javax.swing.JButton();
        StatusLable = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setMinimumSize(new java.awt.Dimension(900, 500));

        jLabel1.setBackground(new java.awt.Color(235, 29, 54));
        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 36)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 255, 255));
        jLabel1.setText("                          Records Page");
        jLabel1.setOpaque(true);

        BloodStatusTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "ID", "Blood Group", "Packets"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, true, true
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(BloodStatusTable);

        HomeBtn.setBackground(new java.awt.Color(235, 29, 54));
        HomeBtn.setFont(new java.awt.Font("Tahoma", 1, 13)); // NOI18N
        HomeBtn.setForeground(new java.awt.Color(255, 255, 255));
        HomeBtn.setText("Home");
        HomeBtn.setDefaultCapable(false);
        HomeBtn.setFocusPainted(false);
        HomeBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                HomeBtnActionPerformed(evt);
            }
        });

        DonorsBtn.setBackground(new java.awt.Color(235, 29, 54));
        DonorsBtn.setFont(new java.awt.Font("Tahoma", 1, 13)); // NOI18N
        DonorsBtn.setForeground(new java.awt.Color(255, 255, 255));
        DonorsBtn.setText("Donors");
        DonorsBtn.setDefaultCapable(false);
        DonorsBtn.setFocusPainted(false);
        DonorsBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                DonorsBtnActionPerformed(evt);
            }
        });

        BuyersBtn.setBackground(new java.awt.Color(235, 29, 54));
        BuyersBtn.setFont(new java.awt.Font("Tahoma", 1, 13)); // NOI18N
        BuyersBtn.setForeground(new java.awt.Color(255, 255, 255));
        BuyersBtn.setText("Buyers");
        BuyersBtn.setDefaultCapable(false);
        BuyersBtn.setFocusPainted(false);
        BuyersBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BuyersBtnActionPerformed(evt);
            }
        });

        BloodBtn.setBackground(new java.awt.Color(235, 29, 54));
        BloodBtn.setFont(new java.awt.Font("Tahoma", 1, 13)); // NOI18N
        BloodBtn.setForeground(new java.awt.Color(255, 255, 255));
        BloodBtn.setText("Blood");
        BloodBtn.setDefaultCapable(false);
        BloodBtn.setFocusPainted(false);
        BloodBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BloodBtnActionPerformed(evt);
            }
        });

        StatusLable.setFont(new java.awt.Font("Tahoma", 1, 13)); // NOI18N
        StatusLable.setText("jLabel2");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 826, Short.MAX_VALUE)
                .addContainerGap())
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(BloodBtn)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(DonorsBtn)
                .addGap(296, 296, 296)
                .addComponent(BuyersBtn)
                .addGap(38, 38, 38))
            .addGroup(layout.createSequentialGroup()
                .addGap(59, 59, 59)
                .addComponent(StatusLable)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(HomeBtn)
                .addGap(33, 33, 33))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 64, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(38, 38, 38)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(BloodBtn)
                    .addComponent(DonorsBtn)
                    .addComponent(BuyersBtn))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 51, Short.MAX_VALUE)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 188, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(72, 72, 72)
                        .addComponent(StatusLable)
                        .addGap(50, 50, 50))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(HomeBtn)
                        .addGap(27, 27, 27))))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void HomeBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_HomeBtnActionPerformed
        // TODO add your handling code here:
           dispose();
          home Home=new home();
          Home.setVisible(true);
          Home.setBounds(220,50,400,300);
    }//GEN-LAST:event_HomeBtnActionPerformed

    private void DonorsBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_DonorsBtnActionPerformed
        // TODO add your handling code here:
         try {
               String mysql="select * from doners";
               
                  Class.forName("com.mysql.cj.jdbc.Driver");
                  Connection  connection = DriverManager.getConnection("jdbc:mysql://localhost/bloodbank", "root", "root");
                  Statement statement = connection.createStatement();
                  Resultset  resultSet = (Resultset) statement.executeQuery(mysql);
                    DefaultTableModel t=BuildTable((ResultSet) resultSet);
                    BloodStatusTable.setModel(t);
                   int count=t.getRowCount();
                   StatusLable.setText(" "+count+"  different donations ");
                    statement.close();
                    connection.close();
                } catch (ClassNotFoundException | SQLException ex) {
                    throw new RuntimeException(ex);
                }
    }//GEN-LAST:event_DonorsBtnActionPerformed

    private void BuyersBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BuyersBtnActionPerformed
        // TODO add your handling code here:
        try {
               String mysql="select * from buyers"; 
                  Class.forName("com.mysql.cj.jdbc.Driver");
                  Connection  connection = DriverManager.getConnection("jdbc:mysql://localhost/bloodbank", "root", "root");
                  Statement statement = connection.createStatement();
                  Resultset  resultSet = (Resultset) statement.executeQuery(mysql);
                  DefaultTableModel t=BuildTable((ResultSet) resultSet);
                   int count=t.getRowCount();
                   StatusLable.setText(" "+count+"  buyres ");
                    BloodStatusTable.setModel(t);
                    statement.close();
                    connection.close();
                } catch (ClassNotFoundException | SQLException ex) {
                    throw new RuntimeException(ex);
                }
    }//GEN-LAST:event_BuyersBtnActionPerformed

    private void BloodBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BloodBtnActionPerformed
        // TODO add your handling code here:
          try {
               String mysql="select * from bloodtable"; 
               String quanql="SELECT sum(packets) FROM bloodtable";
               
                  Class.forName("com.mysql.cj.jdbc.Driver");
                  Connection  connection = DriverManager.getConnection("jdbc:mysql://localhost/bloodbank", "root", "root");
                  Statement statement = connection.createStatement();
                  Resultset  resultSet = (Resultset) statement.executeQuery(mysql);
                    DefaultTableModel t=BuildTable((ResultSet) resultSet);
                     
                    
                    PreparedStatement smt2=connection.prepareStatement(quanql);
                    ResultSet rs2=smt2.executeQuery();
                     if(rs2.next()){
            
                            double sum= rs2.getDouble(1);
                            StatusLable.setText(" "+sum+"  total blood Packets ");
                       }
                    BloodStatusTable.setModel(t);

                    statement.close();
                    connection.close();
                } catch (ClassNotFoundException | SQLException ex) {
                    throw new RuntimeException(ex);
                }
    }//GEN-LAST:event_BloodBtnActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(StatusPage.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(StatusPage.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(StatusPage.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(StatusPage.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new StatusPage().setVisible(true);
            }
        });
    }
     public static DefaultTableModel BuildTable(ResultSet resultSet) throws SQLException{
        // to get meta data of the column (int,varchar.....)
         ResultSetMetaData metaData=resultSet.getMetaData();
         //vector declaration to store column name of the table from result set.
         Vector<String> columnNames= new Vector<>();
         int columnCount=metaData.getColumnCount();
      for(int column=1;column <= columnCount;column++){
         columnNames.add(metaData.getColumnName(column));
      }
         Vector<Vector<Object>> tableData =new Vector<>();
         while (resultSet.next()){
             Vector<Object> vector=new Vector<>();
             for(int columnNumber=1;columnNumber<= columnCount;columnNumber++){
                 vector.add(resultSet.getObject(columnNumber));
             }
             tableData.add(vector);

         }

         return new DefaultTableModel(tableData,columnNames);

    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton BloodBtn;
    private javax.swing.JTable BloodStatusTable;
    private javax.swing.JButton BuyersBtn;
    private javax.swing.JButton DonorsBtn;
    private javax.swing.JButton HomeBtn;
    private javax.swing.JLabel StatusLable;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane jScrollPane1;
    // End of variables declaration//GEN-END:variables
}
